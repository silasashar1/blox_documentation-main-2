get:
  tags:
    - trending
  summary: Get Config
  operationId: get_config_api_v1_trending_configs_get
  parameters:
    - description: unique identifier for the client's use case e.g. trending_products, trending_buy_counts
      required: true
      schema:
        title: Use Case
        type: string
        description: unique identifier for the client's use case e.g. trending_products, trending_buy_counts
      name: use_case
      in: query
    - description: boolean switch that toggles between lite and not config
      required: false
      schema:
        title: Lite
        type: boolean
        description: boolean switch that toggles between lite and not config
        default: true
      name: lite
      in: query
  responses:
    '200':
      description: Successful Response
      content:
        application/json:
          schema:
            title: Response Get Config Api V1 Trending Configs Get
            anyOf:
              - $ref: '../../schemas/TrendingConfigLiteResponse.yaml'
              - $ref: '../../schemas/EmptyResponse.yaml'
    '422':
      description: Validation Error
      content:
        application/json:
          schema:
            $ref: '../../schemas/HTTPValidationError.yaml'
post:
  tags:
    - trending
  summary: Post Config
  description: |-
    Lets one register trending config. If lite is true expected config is TrendingConfigLite else a json string.
  operationId: post_config_api_v1_trending_configs_post
  requestBody:
    content:
      application/json:
        schema:
          $ref: '../../schemas/TrendingConfig_Post.yaml'
    required: true
  responses:
    '200':
      description: Successful Response
      content:
        application/json:
          schema: {}
    '422':
      description: Validation Error
      content:
        application/json:
          schema:
            $ref: '../../schemas/HTTPValidationError.yaml'
delete:
  tags:
    - trending
  summary: Delete Config
  operationId: delete_config_api_v1_trending_configs_delete
  parameters:
    - description: unique identifier for the client's use case e.g. trending_products, trending_buy_counts
      required: true
      schema:
        title: Use Case
        type: string
        description: unique identifier for the client's use case e.g. trending_products, trending_buy_counts
      name: use_case
      in: query
  responses:
    '200':
      description: Successful Response
      content:
        application/json:
          schema:
            $ref: '../../schemas/EmptyResponse.yaml'
    '422':
      description: Validation Error
      content:
        application/json:
          schema:
            $ref: '../../schemas/HTTPValidationError.yaml'